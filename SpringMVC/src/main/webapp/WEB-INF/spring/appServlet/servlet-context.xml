<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Spring MVC Project에서 50여가지의 설정을 대신해주는 태그
	Spring MVC 의 어노테이션을 사용할 수 있도록 해주는 태그 -->
	<annotation-driven />

	<!-- 캐싱을 수행할 디렉토리를 설정
	css, js, 기타 자원에 대해서 캐싱을 하고자 하는 경우 설정을 변경하거나 그대로 사용 -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- ViewResolver 설정 -->
	<!-- Controller에서 forwording 하라고 view 이름을 리턴하면
	여기 조합과 연산을 해서 실제 출력할 뷰를 결정 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 어노테이션이 붙은 클래스들의 bean을 자동 생성해 줄 패키지를 설정
	Spring MVC Project에서는 이 패키지 안에 클래스들을 생성
	하위 패키지를 만드는 것은 관계없음 -->
	
	<context:component-scan base-package="com.pk.mvc" />
	
	
	
</beans:beans>
