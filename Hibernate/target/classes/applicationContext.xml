<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DataSource bean 생성 코드 -->
	
	<!-- Oracle -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 데이터베이스 종류: Oracle -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<!-- 연결할 데이터베이스 URL -->
		<property name="url" value="jdbc:oracle:thin:@192.168.0.200:1521:xe"/>
		<!-- 사용할 데이터베이스 계정 -->
		<property name="username" value="user09"/>
		<!-- 사용할 계정의 비밀번호 -->	
		<property name="password" value="user09"/>	
	</bean>
	
	<!-- 하이버네이트 사용을 위한 bean 설정 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>dao/item.hbm.xml</value>
			</list>
		</property>
		<!-- 데이터베이스 종류 -->
		<property name="hibernateProperties">
			<value>
			hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
			</value>
		</property>
	</bean>
	
	<!-- 하비버네이트 트랜잭션 매니저 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
	<!-- 트랜잭션 처리를 어노테이션으로 하도록 설정 -->
	<tx:annotation-driven/>
	
	
	
	
	
	
	
	
	<!-- SimpleJdbcInsert bean -->
	<bean id="template" class="org.springframework.jdbc.core.simple.SimpleJdbcInsert">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
	</bean>
	
	<!-- bean을 자동 생성하기 위한 패키지 등록 -->
	<context:annotation-config/>
	<context:component-scan base-package="hibernate"/>
	
	<!-- Spring JDBC 또는 MyBatis 에서의 트랜잭션
	처리를 위한 클래스의 bean -->
	<!-- 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	 -->
	
</beans>
